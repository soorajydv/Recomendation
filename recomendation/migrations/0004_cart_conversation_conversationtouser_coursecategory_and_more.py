# Generated by Django 4.1.13 on 2024-07-11 18:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('recomendation', '0003_cart_conversation_conversationtouser_coursecategory_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('craetedat', models.DateTimeField(db_column='craetedAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
                ('ischeckout', models.BooleanField(db_column='isCheckout')),
            ],
            options={
                'db_table': 'Cart',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdat', models.DateTimeField(db_column='createdAt')),
            ],
            options={
                'db_table': 'Conversation',
            },
        ),
        migrations.CreateModel(
            name='Conversationtouser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.ForeignKey(db_column='A', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.conversation')),
            ],
            options={
                'db_table': '_ConversationToUser',
            },
        ),
        migrations.CreateModel(
            name='Coursecategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'CourseCategory',
            },
        ),
        migrations.CreateModel(
            name='Coursedomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'CourseDomain',
            },
        ),
        migrations.CreateModel(
            name='Coursereview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('rating', models.FloatField()),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'CourseReview',
            },
        ),
        migrations.CreateModel(
            name='Coursereviewreply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
                ('idcoursereview', models.IntegerField(db_column='idCourseReview')),
            ],
            options={
                'db_table': 'CourseReviewReply',
            },
        ),
        migrations.CreateModel(
            name='Enrolledcourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolledat', models.DateTimeField(db_column='enrolledAt')),
            ],
            options={
                'db_table': 'EnrolledCourse',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewscount', models.IntegerField(db_column='viewsCount')),
                ('coursecategoryid', models.ForeignKey(db_column='courseCategoryId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.coursecategory')),
            ],
            options={
                'db_table': 'Game',
            },
        ),
        migrations.CreateModel(
            name='Gameview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewtime', models.TextField(db_column='viewTime')),
                ('gameid', models.ForeignKey(db_column='gameId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.game')),
            ],
            options={
                'db_table': 'GameView',
            },
        ),
        migrations.CreateModel(
            name='Gamificationdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('imageurl', models.TextField(blank=True, db_column='imageUrl', null=True)),
                ('gameid', models.ForeignKey(db_column='gameId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.game')),
            ],
            options={
                'db_table': 'GamificationData',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('conversationid', models.ForeignKey(blank=True, db_column='conversationId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.conversation')),
            ],
            options={
                'db_table': 'Message',
            },
        ),
        migrations.CreateModel(
            name='Oauthuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.TextField(db_column='fullName')),
                ('email', models.TextField()),
                ('avatarurl', models.TextField(blank=True, db_column='avatarUrl', null=True)),
                ('oauthid', models.TextField(db_column='oauthId')),
                ('oauthprovider', models.TextField(blank=True, db_column='oauthProvider', null=True)),
            ],
            options={
                'db_table': 'OAuthUser',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentmethod', models.TextField(db_column='paymentMethod')),
                ('amount', models.FloatField()),
                ('userid', models.IntegerField(db_column='userId')),
                ('courseid', models.IntegerField(db_column='courseId')),
                ('createdat', models.DateTimeField(db_column='createdAt')),
            ],
            options={
                'db_table': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='PrismaMigrations',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('checksum', models.CharField(max_length=64)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('migration_name', models.CharField(max_length=255)),
                ('logs', models.TextField(blank=True, null=True)),
                ('rolled_back_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField()),
                ('applied_steps_count', models.IntegerField()),
            ],
            options={
                'db_table': '_prisma_migrations',
            },
        ),
        migrations.CreateModel(
            name='Qna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
                ('responsecount', models.IntegerField(db_column='responseCount')),
            ],
            options={
                'db_table': 'QnA',
            },
        ),
        migrations.CreateModel(
            name='Qnareply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
                ('idqna', models.IntegerField(db_column='idQnA')),
            ],
            options={
                'db_table': 'QnAReply',
            },
        ),
        migrations.CreateModel(
            name='Socialhandle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.TextField(blank=True, null=True, unique=True)),
                ('twitter', models.TextField(blank=True, null=True, unique=True)),
                ('youtube', models.TextField(blank=True, null=True, unique=True)),
                ('linkdin', models.TextField(blank=True, null=True, unique=True)),
                ('facebook', models.TextField(blank=True, null=True, unique=True)),
                ('google', models.TextField(blank=True, null=True, unique=True)),
                ('oauthuserid', models.ForeignKey(db_column='oAuthUserId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.oauthuser')),
            ],
            options={
                'db_table': 'SocialHandle',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amt', models.FloatField()),
                ('oid', models.TextField(unique=True)),
                ('refid', models.TextField()),
                ('createdat', models.DateTimeField(db_column='createdAt')),
            ],
            options={
                'db_table': 'Transaction',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.TextField(db_column='fullName')),
                ('email', models.TextField(unique=True)),
                ('password', models.TextField()),
                ('role', models.TextField()),
                ('avatar', models.TextField(blank=True, null=True)),
                ('birthdate', models.DateTimeField(blank=True, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('oauthid', models.TextField(blank=True, db_column='oauthId', null=True)),
                ('oauthprovider', models.TextField(blank=True, db_column='oauthProvider', null=True)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.RemoveField(
            model_name='course',
            name='courseId',
        ),
        migrations.RemoveField(
            model_name='course',
            name='sections',
        ),
        migrations.RemoveField(
            model_name='course',
            name='titleVideoLink',
        ),
        migrations.RemoveField(
            model_name='course',
            name='version',
        ),
        migrations.AddField(
            model_name='course',
            name='createdat',
            field=models.DateTimeField(db_column='createdAt', default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='discountpercent',
            field=models.FloatField(blank=True, db_column='discountPercent', null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='enrollcount',
            field=models.IntegerField(db_column='enrollCount', default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='language',
            field=models.TextField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='price',
            field=models.FloatField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='rating',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='ratingcount',
            field=models.IntegerField(db_column='ratingCount', default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='subtitle',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='syllabus',
            field=models.CharField(default=1, max_length=10000),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='thumbnail',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='titlevideo',
            field=models.TextField(blank=True, db_column='titleVideo', null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='updatedat',
            field=models.DateTimeField(db_column='updatedAt', default=1),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=models.CharField(max_length=1000),
        ),
        migrations.AlterField(
            model_name='course',
            name='objective',
            field=models.CharField(max_length=1000),
        ),
        migrations.AlterField(
            model_name='course',
            name='requirement',
            field=models.CharField(max_length=1000),
        ),
        migrations.AlterField(
            model_name='course',
            name='title',
            field=models.TextField(),
        ),
        migrations.AlterModelTable(
            name='course',
            table='Course',
        ),
        migrations.DeleteModel(
            name='Enrollment',
        ),
        migrations.AddField(
            model_name='socialhandle',
            name='userid',
            field=models.OneToOneField(blank=True, db_column='userId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='qnareply',
            name='userid',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='qna',
            name='courseid',
            field=models.ForeignKey(db_column='courseId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.course'),
        ),
        migrations.AddField(
            model_name='qna',
            name='userid',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='payment',
            name='txnid',
            field=models.OneToOneField(db_column='txnId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.transaction'),
        ),
        migrations.AddField(
            model_name='message',
            name='receiverid',
            field=models.ForeignKey(db_column='receiverId', on_delete=django.db.models.deletion.DO_NOTHING, related_name='message_receiverid_set', to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='message',
            name='senderid',
            field=models.ForeignKey(db_column='senderId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='gameview',
            name='userid',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='courseid',
            field=models.ForeignKey(db_column='courseId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.course'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='userid',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='coursereviewreply',
            name='userid',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='coursereview',
            name='courseid',
            field=models.ForeignKey(db_column='courseId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.course'),
        ),
        migrations.AddField(
            model_name='coursereview',
            name='userid',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='coursecategory',
            name='coursedomainid',
            field=models.ForeignKey(db_column='courseDomainId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.coursedomain'),
        ),
        migrations.AddField(
            model_name='conversationtouser',
            name='b',
            field=models.ForeignKey(db_column='B', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='cart',
            name='courseid',
            field=models.ForeignKey(db_column='courseId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.course'),
        ),
        migrations.AddField(
            model_name='cart',
            name='userid',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
        ),
        migrations.AddField(
            model_name='course',
            name='authorid',
            field=models.ForeignKey(db_column='authorId', default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='coursecategoryid',
            field=models.ForeignKey(db_column='courseCategoryId', default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.coursecategory'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='userid',
            field=models.ForeignKey(db_column='userId', default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='recomendation.user'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='conversationtouser',
            unique_together={('a', 'b')},
        ),
    ]
